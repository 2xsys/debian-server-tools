#!/bin/bash
#
# Check SSL secured services.
#
# VERSION       :0.1
# DATE          :2014-09-25
# AUTHOR        :Viktor Sz√©pe <viktor@szepe.net>
# LICENSE       :The MIT License (MIT)
# URL           :https://github.com/szepeviktor/debian-server-tools
# BASH-VERSION  :4.2+
# LOCATION      :/usr/local/bin/ssl-check
# CRON-DAILY    :/usr/local/bin/ssl-check

host-registry/ssl field: "service:host:port"
service=smtp-starttls,smtps,imaps,https

openssl s_client -CAfile /etc/ssl/certs/ca-certificates.crt -connect www.atlantischild.hu:443
quit=timeout

host-registry/ssl reply: "Server public key is 2048 bit
Secure Renegotiation IS supported
Compression: NONE
Expansion: NONE
SSL-Session:
    Protocol  : TLSv1.2
    Cipher    : ECDHE-RSA-AES128-GCM-SHA256
    TLS session ticket lifetime hint: 300 (seconds)
    Timeout   : 300 (sec)
    Verify return code: 0 (ok)
"

ALERT_DAYS="10"
NOW_SEC="$(date "+%s")"

# find certs in /etc excluding /etc/ssl/certs/
find /etc -not -path "/etc/ssl/certs/*" "(" -iname "*\.crt" -or -iname "*\.pem" ")" \
    | while read PEM; do
        # not an X509 cert
        if ! grep -q -- "-BEGIN CERTIFICATE-" "$PEM"; then
            continue
        fi

        EXPIRY_DATE="$(openssl x509 -in "$PEM" -noout -enddate | cut -d'=' -f 2-)"
        EXPIRY_SEC="$(date --date "$EXPIRY_DATE" "+%s")"

        if [ $? != 0 ]; then
            echo "Invalid end date (${EXPIRY_DATE}) in ${PEM}" >&2
            continue
        fi

        EXPIRY_DAYS="$(( (EXPIRY_SEC - NOW_SEC) / 86400 ))"
        #echo -e "[DBG] file: ${PEM} / days: ${EXPIRY_DAYS}" >&2

        if [ "$EXPIRY_DAYS" -lt "$ALERT_DAYS" ]; then
            echo "$(openssl x509 -in "$PEM" -noout -subject | cut -d'=' -f 2-) (${PEM}) expires in ${EXPIRY_DAYS} day(s)."
        fi
    done
